var ingoose;
(function (ingoose) {
    var _db;
    var PromiseOpened = (function () {
        function PromiseOpened(dbname, version) {
            this.dbname = dbname;
            this.version = version;
        }
        PromiseOpened.prototype.schemas = function (schemas) {
            var _this = this;
            debugger;
            this.openRequest = indexedDB.open(this.dbname, this.version);
            this.openRequest.onupgradeneeded = function (ev) {
                console.log('ここで与えられたschemaについてどうこうする', schemas);
            };
            this.openRequest.onsuccess = function (ev) {
                _db = _this.openRequest.result;
                console.log("うれぴー");
            };
            return this;
        };
        PromiseOpened.prototype.error = function (onerror) {
            if (onerror === void 0) { onerror = function () {
            }; }
            this.openRequest.onerror = onerror;
            return this;
        };
        return PromiseOpened;
    })();
    ingoose.PromiseOpened = PromiseOpened;
    function connect(dbname, version) {
        return new PromiseOpened(dbname, version);
    }
    ingoose.connect = connect;
})(ingoose || (ingoose = {}));
